const { Pool } = require("pg") // PostgreSQL-–≥–µ “õ–æ—Å—ã–ª—É “Ø—à—ñ–Ω Pool –∫–ª–∞—Å—Å—ã–Ω –∏–º–ø–æ—Ä—Ç—Ç–∞—É
require("dotenv").config() // .env —Ñ–∞–π–ª—ã–Ω–¥–∞“ì—ã –∞–π–Ω—ã–º–∞–ª—ã–ª–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É

// PostgreSQL –¥–µ—Ä–µ–∫“õ–æ—Ä—ã–Ω–∞ “õ–æ—Å—ã–ª—É “Ø—à—ñ–Ω Pool –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å—ã
const pool = new Pool({
  connectionString: 'postgresql://isa:xA2DQem4gXzN9X8RzhqWp8amcVJTmNJj@dpg-d289pjp5pdvs738bivu0-a.oregon-postgres.render.com/qaragul_db',
  ssl: { rejectUnauthorized: false } 
})

// –î–µ—Ä–µ–∫“õ–æ—Ä –±–∞–π–ª–∞–Ω—ã—Å—ã–Ω —Ç–µ–∫—Å–µ—Ä—É
const testConnection = async () => {
  try {
    const client = await pool.connect() // –î–µ—Ä–µ–∫“õ–æ—Ä“ì–∞ “õ–æ—Å—ã–ª—É
    console.log("‚úÖ PostgreSQL –¥–µ—Ä–µ–∫“õ–æ—Ä—ã–Ω–∞ —Å”ô—Ç—Ç—ñ “õ–æ—Å—ã–ª–¥—ã")
    client.release() // “ö–æ—Å—ã–ª—ã–º–¥—ã –±–æ—Å–∞—Ç—É
  } catch (error) {
    console.error("‚ùå –î–µ—Ä–µ–∫“õ–æ—Ä “õ–æ—Å—ã–ª—É “õ–∞—Ç–µ—Å—ñ:", error.message)
    console.log("üîß –î–µ—Ä–µ–∫“õ–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑:")
    console.log(`   - Host: ${process.env.DB_HOST}`)
    console.log(`   - Port: ${process.env.DB_PORT}`)
    console.log(`   - Database: ${process.env.DB_NAME}`)
    console.log(`   - User: ${process.env.DB_USER}`)
  }
}

// –î–µ—Ä–µ–∫“õ–æ—Ä –∫–µ—Å—Ç–µ–ª–µ—Ä—ñ–Ω –∂–∞—Å–∞—É
const createTables = async () => {
  try {
    // –ê–ª–¥—ã–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã —Ç–µ–∫—Å–µ—Ä—É
    await testConnection()

    // Users –∫–µ—Å—Ç–µ—Å—ñ–Ω –∂–∞—Å–∞—É (“õ–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Ç—É—Ä–∞–ª—ã –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä)
    await pool.query(`
      CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY, -- –ë—ñ—Ä–µ–≥–µ–π ID
        full_name VARCHAR(255) NOT NULL, -- –¢–æ–ª—ã“õ –∞—Ç—ã
        email VARCHAR(255) UNIQUE NOT NULL, -- Email (–±—ñ—Ä–µ–≥–µ–π)
        password VARCHAR(255) NOT NULL, -- “ö“±–ø–∏—è —Å”©–∑
        avatar TEXT, -- –ü—Ä–æ—Ñ–∏–ª—å —Å—É—Ä–µ—Ç—ñ
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- –ñ–∞—Å–∞–ª“ì–∞–Ω —É–∞“õ—ã—Ç—ã
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- –°–æ“£“ì—ã —Ä–µ—Ç –∂–∞“£–∞—Ä—Ç—ã–ª“ì–∞–Ω —É–∞“õ—ã—Ç—ã
      );
    `)

    // Plant Scans –∫–µ—Å—Ç–µ—Å—ñ–Ω –∂–∞—Å–∞—É (”©—Å—ñ–º–¥—ñ–∫—Ç–µ—Ä–¥—ñ“£ —Å–∫–∞–Ω–µ—Ä–ª–µ—É —Ç–∞—Ä–∏—Ö—ã)
    await pool.query(`
      CREATE TABLE IF NOT EXISTS plant_scans (
        id SERIAL PRIMARY KEY, -- –ë—ñ—Ä–µ–≥–µ–π ID
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE, -- “ö–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ —Å—ñ–ª—Ç–µ–º–µ
        image_url TEXT NOT NULL, -- –°—É—Ä–µ—Ç URL
        common_name VARCHAR(255), -- ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ “õ–∞–∑–∞“õ—à–∞ –∞—Ç–∞—É—ã
        scientific_name VARCHAR(255), -- ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ “ì—ã–ª—ã–º–∏ –∞—Ç–∞—É—ã
        description TEXT, -- ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ —Å–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã
        origin VARCHAR(255), -- ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ —à—ã“ì—É —Ç–µ–≥—ñ
        sunlight VARCHAR(255), -- –ñ–∞—Ä—ã“õ “õ–∞–∂–µ—Ç—Ç—ñ–ª—ñ–≥—ñ
        water VARCHAR(255), -- –°—É–∞—Ä—É —Ä–µ–∂–∏–º—ñ
        growth_rate VARCHAR(255), -- ”®—Å—É “õ–∞—Ä“õ—ã–Ω—ã
        accuracy INTEGER, -- –î”ô–ª–¥—ñ–∫ (0-100)
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- –°–∫–∞–Ω–µ—Ä–ª–µ—É —É–∞“õ—ã—Ç—ã
      );
    `)

    console.log("‚úÖ –î–µ—Ä–µ–∫“õ–æ—Ä –∫–µ—Å—Ç–µ–ª–µ—Ä—ñ —Å”ô—Ç—Ç—ñ –∂–∞—Å–∞–ª–¥—ã") // –ö–µ—Å—Ç–µ–ª–µ—Ä —Å”ô—Ç—Ç—ñ –∂–∞—Å–∞–ª“ì–∞–Ω—ã–Ω —Ö–∞–±–∞—Ä–ª–∞—É
  } catch (error) {
    console.error("‚ùå –î–µ—Ä–µ–∫“õ–æ—Ä “õ–∞—Ç–µ—Å—ñ:", error.message) // “ö–∞—Ç–µ –±–æ–ª—Å–∞, —Ö–∞–±–∞—Ä–ª–∞—É
  }
}

module.exports = { pool, createTables } // pool –∂”ô–Ω–µ createTables —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä—ã–Ω —ç–∫—Å–ø–æ—Ä—Ç—Ç–∞—É
