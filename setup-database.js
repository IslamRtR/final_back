const { Pool } = require("pg") // PostgreSQL “Ø—à—ñ–Ω Pool –∫–ª–∞—Å—ã–Ω –∏–º–ø–æ—Ä—Ç—Ç–∞—É
require("dotenv").config() // .env —Ñ–∞–π–ª—ã–Ω –∂“Ø–∫—Ç–µ—É

const setupDatabase = async () => {
  // –ê–ª–¥—ã–º–µ–Ω PostgreSQL –¥–µ—Ä–µ–∫“õ–æ—Ä—ã–Ω–∞ “õ–æ—Å—ã–ª—É
  const adminPool = new Pool({
    user: process.env.DB_USER || "postgres", // –î–µ—Ä–µ–∫“õ–æ—Ä “õ–æ–ª–¥–∞–Ω—É—à—ã—Å—ã
    host: process.env.DB_HOST || "localhost", // –î–µ—Ä–µ–∫“õ–æ—Ä —Ö–æ—Å—Ç—ã
    database: "postgres", // ”ò–¥–µ–ø–∫—ñ "postgres" –¥–µ—Ä–µ–∫“õ–æ—Ä—ã
    password: process.env.DB_PASSWORD || "admin", // “ö–æ–ª–¥–∞–Ω—É—à—ã–Ω—ã“£ “õ“±–ø–∏—è —Å”©–∑—ñ
    port: Number.parseInt(process.env.DB_PORT) || 5432, // –ü–æ—Ä—Ç –Ω”©–º—ñ—Ä—ñ
  })

  try {
    console.log("üîß –î–µ—Ä–µ–∫“õ–æ—Ä–¥—ã –æ—Ä–Ω–∞—Ç—É–¥–∞...") // –î–µ—Ä–µ–∫“õ–æ—Ä–¥—ã –æ—Ä–Ω–∞—Ç—É –±–∞—Å—Ç–∞–ª“ì–∞–Ω—ã–Ω —Ö–∞–±–∞—Ä–ª–∞—É

    // –î–µ—Ä–µ–∫“õ–æ—Ä–¥—ã“£ –±–∞—Ä-–∂–æ“ì—ã–Ω —Ç–µ–∫—Å–µ—Ä—É
    const dbExists = await adminPool.query("SELECT 1 FROM pg_database WHERE datname = $1", [
      process.env.DB_NAME || "finalProj_db", // –î–µ—Ä–µ–∫“õ–æ—Ä –∞—Ç–∞—É—ã–Ω –∞–ª—É
    ])

    if (dbExists.rows.length === 0) {
      // –ï–≥–µ—Ä –¥–µ—Ä–µ–∫“õ–æ—Ä –∂–æ“õ –±–æ–ª—Å–∞, –æ–Ω—ã “õ“±—Ä—É
      await adminPool.query(`CREATE DATABASE "${process.env.DB_NAME || "finalProj_db"}"`)
      console.log(`‚úÖ –î–µ—Ä–µ–∫“õ–æ—Ä "${process.env.DB_NAME}" –∂–∞—Å–∞–ª–¥—ã`) // –î–µ—Ä–µ–∫“õ–æ—Ä –∂–∞—Å–∞–ª“ì–∞–Ω—ã–Ω —Ö–∞–±–∞—Ä–ª–∞—É
    } else {
      console.log(`‚úÖ –î–µ—Ä–µ–∫“õ–æ—Ä "${process.env.DB_NAME}" –±“±—Ä—ã–Ω –∂–∞—Å–∞–ª“ì–∞–Ω`) // –î–µ—Ä–µ–∫“õ–æ—Ä –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ö–∞–±–∞—Ä–ª–∞—É
    }

    await adminPool.end() // –ê–¥–º–∏–Ω –¥–µ—Ä–µ–∫“õ–æ—Ä—ã–º–µ–Ω –∂“±–º—ã—Å –∞—è“õ—Ç–∞–ª–¥—ã

    // –ï–Ω–¥—ñ –∂–∞“£–∞ –¥–µ—Ä–µ–∫“õ–æ—Ä“ì–∞ “õ–æ—Å—ã–ª—É
    const projectPool = new Pool({
      user: process.env.DB_USER || "postgres", // –î–µ—Ä–µ–∫“õ–æ—Ä “õ–æ–ª–¥–∞–Ω—É—à—ã—Å—ã
      host: process.env.DB_HOST || "localhost", // –î–µ—Ä–µ–∫“õ–æ—Ä —Ö–æ—Å—Ç—ã
      database: process.env.DB_NAME || "finalProj_db", // –ñ–∞“£–∞ –¥–µ—Ä–µ–∫“õ–æ—Ä –∞—Ç–∞—É—ã
      password: process.env.DB_PASSWORD || "admin", // “ö–æ–ª–¥–∞–Ω—É—à—ã–Ω—ã“£ “õ“±–ø–∏—è —Å”©–∑—ñ
      port: Number.parseInt(process.env.DB_PORT) || 5432, // –ü–æ—Ä—Ç –Ω”©–º—ñ—Ä—ñ
    })

    // –ö–µ—Å—Ç–µ–ª–µ—Ä–¥—ñ –∂–∞—Å–∞—É
    await projectPool.query(`
      CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,  // –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
        full_name VARCHAR(255) NOT NULL,  // –¢–æ–ª—ã“õ –∞—Ç—ã
        email VARCHAR(255) UNIQUE NOT NULL,  // Email –∞–¥—Ä–µ—Å—ñ (—É–Ω–∏–∫–∞–ª–¥—ã)
        password VARCHAR(255) NOT NULL,  // “ö“±–ø–∏—è —Å”©–∑
        avatar TEXT,  // –ü—Ä–æ—Ñ–∏–ª—å —Å—É—Ä–µ—Ç—ñ
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  // –ñ–∞—Å–∞–ª“ì–∞–Ω —É–∞“õ—ã—Ç
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  // –ñ–∞“£–∞—Ä—Ç—ã–ª“ì–∞–Ω —É–∞“õ—ã—Ç
      );
    `)

    await projectPool.query(`
      CREATE TABLE IF NOT EXISTS plant_scans (
        id SERIAL PRIMARY KEY,  // ”®—Å—ñ–º–¥—ñ–∫ —Å–∫–∞–Ω–µ—Ä–ª–µ—É–¥—ñ“£ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,  // –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã (—à–µ—Ç–µ–ª –∫—ñ–ª—Ç—ñ)
        image_url TEXT NOT NULL,  // –°–∫–∞–Ω–µ—Ä–ª–µ–Ω–≥–µ–Ω ”©—Å—ñ–º–¥—ñ–∫ —Å—É—Ä–µ—Ç—ñ–Ω—ñ“£ URL
        common_name VARCHAR(255),  // ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ –∂–∞–ª–ø—ã –∞—Ç–∞—É—ã
        scientific_name VARCHAR(255),  // ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ “ì—ã–ª—ã–º–∏ –∞—Ç–∞—É—ã
        description TEXT,  // –°–∏–ø–∞—Ç—Ç–∞–º–∞
        origin VARCHAR(255),  // ”®—Å—ñ–º–¥—ñ–∫—Ç—ñ“£ —à—ã“õ“õ–∞–Ω –∂–µ—Ä—ñ
        sunlight VARCHAR(255),  // –ö“Ø–Ω–≥–µ –¥–µ–≥–µ–Ω “õ–∞–∂–µ—Ç—Ç—ñ–ª—ñ–∫
        water VARCHAR(255),  // –°—É “õ–∞–∂–µ—Ç—Ç—ñ–ª—ñ–≥—ñ
        growth_rate VARCHAR(255),  // ”®—Å—É “õ–∞—Ä“õ—ã–Ω—ã
        accuracy INTEGER,  // –¢–µ–∫—Å–µ—Ä—ñ—Å –Ω”ô—Ç–∏–∂–µ—Å—ñ–Ω—ñ“£ –¥”ô–ª–¥—ñ–≥—ñ
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  // –°–∫–∞–Ω–µ—Ä–ª–µ—É —É–∞“õ—ã—Ç—ã
      );
    `)

    console.log("‚úÖ –ë–∞—Ä–ª—ã“õ –∫–µ—Å—Ç–µ–ª–µ—Ä —Å”ô—Ç—Ç—ñ –∂–∞—Å–∞–ª–¥—ã") // –ö–µ—Å—Ç–µ–ª–µ—Ä–¥—ñ“£ —Å”ô—Ç—Ç—ñ –∂–∞—Å–∞–ª“ì–∞–Ω—ã —Ç—É—Ä–∞–ª—ã —Ö–∞–±–∞—Ä–ª–∞—É
    await projectPool.end() // –î–µ—Ä–µ–∫“õ–æ—Ä–º–µ–Ω –∂“±–º—ã—Å –∞—è“õ—Ç–∞–ª–¥—ã

    console.log("üéâ –î–µ—Ä–µ–∫“õ–æ—Ä –æ—Ä–Ω–∞—Ç—É –∞—è“õ—Ç–∞–ª–¥—ã!") // –î–µ—Ä–µ–∫“õ–æ—Ä –æ—Ä–Ω–∞—Ç—É –∞—è“õ—Ç–∞–ª“ì–∞–Ω—ã–Ω —Ö–∞–±–∞—Ä–ª–∞—É
    process.exit(0) // –°–∫—Ä–∏–ø—Ç—Ç—ñ“£ —Å”ô—Ç—Ç—ñ –∞—è“õ—Ç–∞–ª—É—ã
  } catch (error) {
    console.error("‚ùå –î–µ—Ä–µ–∫“õ–æ—Ä –æ—Ä–Ω–∞—Ç—É “õ–∞—Ç–µ—Å—ñ:", error.message) // “ö–∞—Ç–µ —Ç—É—Ä–∞–ª—ã —Ö–∞–±–∞—Ä–ª–∞—É
    console.log("\nüîß –ú“Ø–º–∫—ñ–Ω —à–µ—à—ñ–º–¥–µ—Ä:") // –ú“Ø–º–∫—ñ–Ω –±–æ–ª–∞—Ç—ã–Ω —à–µ—à—ñ–º–¥–µ—Ä
    console.log("1. PostgreSQL —Å–µ—Ä–≤–µ—Ä—ñ —ñ—Å–∫–µ “õ–æ—Å—ã–ª“ì–∞–Ω –±–∞ —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑")
    console.log("2. .env —Ñ–∞–π–ª—ã–Ω–¥–∞“ì—ã –¥–µ—Ä–µ–∫“õ–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑")
    console.log("3. “ö–æ–ª–¥–∞–Ω—É—à—ã “õ“±“õ—ã“õ—Ç–∞—Ä—ã–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑")
    process.exit(1) // “ö–∞—Ç–µ –±–æ–ª“ì–∞–Ω –∂–∞“ì–¥–∞–π–¥–∞ –ø—Ä–æ—Ü–µ—Å—Å –∞—è“õ—Ç–∞–ª–∞–¥—ã
  }
}

setupDatabase() // –§—É–Ω–∫—Ü–∏—è–Ω—ã —à–∞“õ—ã—Ä—É
